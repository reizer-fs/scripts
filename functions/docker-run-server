function docker_run {

	help () {
		echo "Usage: \$command hostname type(optional)"
		echo "type = mysql apache squid samba torrent gitlab gcc"
	}

	#if [ $# -lt 1 ] ; then
	#	help && return 1
	#fi

	HOSTNAME=$1
	TYPE=$2

	case $TYPE in
		mysql|mariadb) CONTAINER="suse-mysql"; PORTS="3306"; DATA_VOLUME="var/lib/mysql"; ENV="ADMIN_USER=\"$ADMIN_USER\" ADMIN_PASS=\"$ADMIN_PASS\" RESTRICTED_USER=\"$RESTRICTED_USER\" RESTRICTED_USER_PASSWORD=\"$RESTRICTED_USER_PASSWORD\" RESTRICTED_DB=\"$RESTRICTED_DB\"" ;;
		apache) CONTAINER="suse-apache";PORTS="80 443";;
		squid)	CONTAINER="suse-squid";	PORTS="3128";	DATA_VOLUME="/var/cache/squid" ;;
		samba)	CONTAINER="suse-samba";	PORTS="137 139 445" ;;
		gcc)	CONTAINER="suse-gcc";;
		splunk)	CONTAINER="suse-splunk";;
		percona)	CONTAINER="percona/pmm-server";	PORTS="80 443";;
		torrent)	CONTAINER="suse-torrent";;
		gitlab)		CONTAINER="suse-gitlab";;
		alpine)		CONTAINER="alpine";;
		testssl)	CONTAINER="alpine-testssl";;
	esac

	VIP=`getent hosts $HOSTNAME | awk '{print $1}'`
	ENV_DIRECTORY="/media/fx/3AD8C970D8C92AC9/Docker/$TYPE/$HOSTNAME"


	# Handling data volume
	if [ ! -z "$DATA_VOLUME" ] ; then
		for i in $DATA_VOLUME ; do
			if [ ! -d $ENV_DIRECTORY/$i ] ; then
				mkdir -p $ENV_DIRECTORY/$i
			fi
			VOLUMES="$VOLUMES -v $ENV_DIRECTORY${i}:${i}"
		done
	fi

	if [ ! -z "$PORTS" ] ; then
		for e in $PORTS ; do
			VIP=" -p $VIP:$e:$e"
		done
	else
		unset VIP
	fi

	# Handling environnment variable
	if [ ! -z "$ENV" ] ; then
		for i in $ENV ; do
			ENV_VARS=" $ENV_VARS -e $i "
		done
	fi

	docker run -d --restart="always" --name $HOSTNAME -h $HOSTNAME $VIP $VOLUMES $ENV_VARS $EXTRAOPTIONS $CONTAINER

	if [ $? = "0" ]; then
		cp /opt/ffx/systems/ubuntu/etc/systemd/system/docker.template /etc/systemd/system/docker-$HOSTNAME.service
		sed -i "s/container/$HOSTNAME/" /etc/systemd/system/docker-$HOSTNAME.service
		systemctl daemon-reload && return 0
		systemctl enable docker-$HOSTNAME.service 
	fi
}
